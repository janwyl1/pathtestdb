{"version":3,"sources":["pathology_tests.js","polyfills.js"],"names":["pathTestsDb","path_tests","path_tests_original","startAt","limit","fetchData","dataUrl","$","ajax","type","dataType","success","handleReqSuccess","error","handleReqError","data","val","appendTestsHTML","on","e","searchTests","length","keypress","which","preventDefault","stop","animate","scrollTop","offset","top","this","find","addClass","focus","req","status","err","append","parseHTML","console","log","determineBorderColor","colorStr","toString","toLowerCase","tests","htmlStr","hideShowMore","show","i","Container","Code","Name","Department","Sample_Type","EQMS_Code","EQMS_Link","Lab_Instructions","Aliases","Comments","Turnaround","resetTests","empty","filterTests","searchTerm","filter","test","Search_Terms","includes","sortTests","sort","a","b","aTerms","indexOf","bTerms","filterDepartment","department","hide","getPathTests","String","prototype","search","start","RegExp","TypeError","undefined"],"mappings":"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","file":"all.min.js","sourcesContent":["var pathTestsDb = (function () {\r\n  \"use strict\";\r\n\r\n  /**\r\n   * Config\r\n   */\r\n  var path_tests;\r\n  var path_tests_original;\r\n  var startAt = 0;\r\n  var limit = 40;\r\n\r\n  /**\r\n   * @function getPathTests\r\n   * @description Expose path_tests for testing in browser\r\n   */\r\n  function getPathTests() {\r\n    return path_tests;\r\n  }\r\n\r\n  /**\r\n   * @function fetchData\r\n   * @param {string} dataUrl url to fetch data from\r\n   */\r\n  function fetchData(dataUrl) {\r\n    return $.ajax(dataUrl, {\r\n      type: 'GET',\r\n      dataType: 'json',\r\n      success: handleReqSuccess,\r\n      error: handleReqError\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @function handleReqSuccess\r\n   * @param {array} data\r\n   * @description Handles successful when fetching data. Sets the application to it's initial state\r\n   * <br/>&nbsp;&nbsp;Stores data in path_tests var, stores a copy of it in path_tests_original. \r\n   * <br/>&nbsp;&nbsp;Appends path_tests to the DOM and attaches event handlers\r\n   */\r\n  function handleReqSuccess(data) {\r\n    path_tests = data;\r\n    path_tests_original = data;\r\n    resetDeptDropdown();\r\n    appendTestsHTML(path_tests);\r\n    handleSearchClick()\r\n    handleShowMoreClick();\r\n    handleSearchOnEnter();\r\n    handleDeptDropdownChange();\r\n    handleAccordionClick();\r\n    selectSearchInput();\r\n  }\r\n\r\n  /**\r\n   * @function handleReqError\r\n   * @param {array} data\r\n   * @description Handles error that occur when fetching data\r\n   * <br/>&nbsp;&nbsp;Writes error to the DOM\r\n   */\r\n  function handleReqError(req, status, err) {\r\n    $('.tests').append($.parseHTML('<div class=\"error-msg\">Unable to fetch data</div>'))\r\n    console.log(\"Error: Unable to load data. Status: %s (%s)\", status, err)\r\n  }\r\n\r\n  /**\r\n   * @function determineBorderColor\r\n   * @param {string} colorStr Colour of container \r\n   * @returns {string} CSS class name\r\n   * @description Returns the classname to use for each specimen container (see left border on accordion headings)\r\n   */\r\n  function determineBorderColor(colorStr) {\r\n    switch (colorStr.toString().toLowerCase()) {\r\n      case 'brown':\r\n      case 'small brown':\r\n      case 'large brown':\r\n        return \"border-brown\"\r\n      case 'red':\r\n      case 'small red':\r\n      case 'large red':\r\n        return \"border-red\"\r\n      case 'green':\r\n      case 'small green':\r\n      case 'large green':\r\n        return \"border-green\"\r\n      case 'yellow':\r\n      case 'small yellow':\r\n      case 'large yellow':\r\n        return \"border-yellow\"\r\n      case 'orange':\r\n      case 'small orange':\r\n      case 'large orange':\r\n        return \"border-orange\"\r\n      case 'faeces':\r\n        return \"border-faeces\"\r\n      case 'yellow urine':\r\n        return \"border-yellow-urine\"\r\n      case 'green urine':\r\n        return \"border-green-urine\"\r\n      case '24h urine':\r\n        return \"border-24h-urine\"\r\n      case '24h urine acid':\r\n        return \"border-24h-urine-acid\"\r\n      default:\r\n        return \"border-white\"\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function appendTestsHTML\r\n   * @param {array} tests Array of pathology tests\r\n   * @description Writes HTML for accordion elements to the DOM\r\n   */\r\n  function appendTestsHTML(tests) {\r\n    var htmlStr = \"\";\r\n    if (tests.length < 1) {\r\n      htmlStr += '<div class=\"error-msg\">No Tests Found.</div>';\r\n      hideShowMore();\r\n    }\r\n\r\n    toggleShowMore();\r\n\r\n    for (var i = startAt; i < limit; i++) {\r\n      if (tests[i]) {\r\n        var borderColor = determineBorderColor(tests[i].Container);\r\n\r\n        htmlStr += '<div class=\"card\">';\r\n        htmlStr += '<div class=\"card-header\" data-toggle=\"collapse\" data-target=\"#collapse' + i + '\" aria-expanded=\"' + (i === 0 ? 'true' : 'false') + '\" aria-controls=\"collapse' + i + '\" href=\"#collapse' + i + '\" id=\"heading' + i + '\">';\r\n        htmlStr += '<div class=\"no-gutters row\">'\r\n        htmlStr += '<div class=\"col-12 card-header-text ' + borderColor + '\">'\r\n        htmlStr += '<div class=\"row\">'\r\n        htmlStr += '<div class=\"card-header-left  align-self-center col-md-8\">';\r\n        htmlStr += '<h2 class=\"text-truncate\">' + (tests[i].Code ? tests[i].Name : \"N/A\") + '</h2>'\r\n        htmlStr += '<h5 class=\"text-truncate\">' + (tests[i].Name ? tests[i].Code : \"N/A\") + '</h5>'\r\n        htmlStr += '</div>';\r\n        htmlStr += '<div class=\"card-header-right align-self-center col-md-4 d-none d-sm-block \">';\r\n        if (tests[i].Department) htmlStr += '<p>' + tests[i].Department + '</p>';\r\n        if (tests[i].Container) htmlStr += '<p class=\"badge badge-pill\">' + tests[i].Container + '</p>';\r\n        htmlStr += '</div>';\r\n        htmlStr += '</div>';\r\n        htmlStr += '</div>';\r\n        htmlStr += '</div>';\r\n        htmlStr += '</div>';\r\n        htmlStr += '<div class=\"collapse' + (i === 0 ? ' show' : '') + '\" id=\"collapse' + i + '\" aria-labelledby=\"heading' + i + '\" data-parent=\"#accordion\">';\r\n        htmlStr += '<div class=\"card-body\">';\r\n        htmlStr += '<dl><div class=\"row\">';\r\n        if (tests[i].Name) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Name</dt>' + '<dd class=\"col-md-9\">' + tests[i].Name + '</dd>';\r\n        if (tests[i].Code) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Code</dt>' + '<dd class=\"col-md-9\">' + tests[i].Code + '</dd>';\r\n        if (tests[i].Sample_Type) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Specimen</dt>' + '<dd class=\"col-md-9\">' + tests[i].Sample_Type + '</dd>';\r\n        if (tests[i].Container) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Container</dt>' + '<dd class=\"col-md-9\">' + tests[i].Container + '</dd>';\r\n        if (tests[i].Department) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Department</dt>' + '<dd class=\"col-md-9\">' + tests[i].Department + '</dd>';\r\n        if (tests[i].EQMS_Code) htmlStr += '<dt class=\"col-md-3 col-lg-2\">EQMS</dt>' + '<dd class=\"col-md-9\"><a href=\"' + tests[i].EQMS_Link + '\" class=\"eqms-link\">' + tests[i].EQMS_Code + '</a>' + '</dd>';\r\n        if (tests[i].Lab_Instructions) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Comments</dt>' + '<dd class=\"col-md-9\">' + tests[i].Lab_Instructions + '</dd>';\r\n        if (tests[i].Aliases) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Known as</dt>' + '<dd class=\"col-md-9\">' + tests[i].Aliases + '</dd>';\r\n        if (tests[i].Comments) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Comments</dt>' + '<dd class=\"col-md-9\">' + tests[i].Comments + '</dd>';\r\n        if (tests[i].Turnaround) htmlStr += '<dt class=\"col-md-3 col-lg-2\">Turnaround</dt>' + '<dd class=\"col-md-9\">' + tests[i].Turnaround + '</dd>';\r\n        htmlStr += '</dl></div>';\r\n        htmlStr += '</div>';\r\n        htmlStr += '</div>';\r\n        htmlStr += '</div>';\r\n      }\r\n    }\r\n    $('.tests').append($.parseHTML(htmlStr));\r\n  }\r\n\r\n  /**\r\n   * @function showMoreTests\r\n   * @description Increases limit and writes new accordion elements to the DOM\r\n   */\r\n  function showMoreTests() {\r\n    if (limit < path_tests.length) {\r\n      startAt = limit;\r\n      limit += 50;\r\n      appendTestsHTML(path_tests);\r\n    }\r\n  }\r\n  /**\r\n   * @function resetDeptDropdown\r\n   * @description Reset department dropdown on search form\r\n   */\r\n  function resetDeptDropdown() {\r\n    $('#departments').val('all')\r\n  }\r\n  /**\r\n   * @function resetTests\r\n   * @description Reset path_tests array and pagination variables, remove HTML\r\n   */\r\n  function resetTests() {\r\n    path_tests = path_tests_original;\r\n    startAt = 0;\r\n    limit = 50;\r\n    $('.tests').empty();\r\n  }\r\n  /**\r\n   * @function filterTests\r\n   * @param {array} tests\r\n   * @param {string} searchTerm\r\n   * @returns {array} Filter array of tests by search term\r\n   */\r\n  function filterTests(tests, searchTerm) {\r\n    return tests.filter(function (test) {\r\n      return test.Search_Terms.toLowerCase().includes(searchTerm.toLowerCase())\r\n    });\r\n  }\r\n  /**\r\n   * @function sortTests\r\n   * @param {array} tests\r\n   * @param {string} searchTerm\r\n   * @description Sort an array of tests by appearance of search term. Terms that appear earlier are more relevant e.g. Codes appear first\r\n   */\r\n  function sortTests(tests, searchTerm) {\r\n    return tests.sort(function (a, b) {\r\n      var aTerms = a.Search_Terms.toLowerCase().indexOf(searchTerm.toLowerCase());\r\n      var bTerms = b.Search_Terms.toLowerCase().indexOf(searchTerm.toLowerCase());\r\n      if (aTerms < bTerms) return -1;\r\n      if (aTerms > bTerms) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n  /**\r\n   * @function filterDepartment\r\n   * @param {array} tests\r\n   * @param {string} department\r\n   * @description Filter array of tests by department\r\n   */\r\n  function filterDepartment(tests, department) {\r\n    return tests.filter(function (test) {\r\n      if (department.toLowerCase() === \"all\") return true;\r\n      return test.Department.toLowerCase().includes(department.toLowerCase());\r\n    })\r\n  }\r\n  /**\r\n   * @function searchTests\r\n   * @description Handles search. Filters and sorts tests and appends HTML to DOM\r\n   */\r\n  function searchTests() {\r\n    var searchTerm = $('#search-inpt').val().toLowerCase();\r\n    var department = $('#departments').val();\r\n\r\n    resetTests();\r\n    path_tests = filterTests(path_tests, searchTerm);\r\n    path_tests = sortTests(path_tests, searchTerm);\r\n    path_tests = filterDepartment(path_tests, department);\r\n    appendTestsHTML(path_tests);\r\n  }\r\n  /**\r\n   * @function hideShowMore\r\n   * @description Hide #show-more-btn\r\n   */\r\n  function hideShowMore() {\r\n    $('#show-more-btn').hide()\r\n  };\r\n  /**\r\n   * @function showShowMore\r\n   * @description Show #show-more-btn\r\n   */\r\n  function showShowMore() {\r\n    $('#show-more-btn').show()\r\n  };\r\n  /**\r\n   * @function toggleShowMore\r\n   * @description Show/hide #show-more-btn\r\n   */\r\n  function toggleShowMore() {\r\n    if (path_tests.length >= 1 && limit < path_tests.length) {\r\n      showShowMore();\r\n    } else {\r\n      hideShowMore();\r\n    }\r\n  };\r\n  /**\r\n   * @function selectSearchInput\r\n   * @description Focus on the search box\r\n   */\r\n  function selectSearchInput() {\r\n    $('#search-inpt').focus();\r\n  }\r\n\r\n  /**\r\n   * @function handleDeptDropdownChange\r\n   * @description Handle department dropdown selection\r\n   */\r\n  function handleDeptDropdownChange() {\r\n    $('#departments').on('change', function (e) {\r\n      searchTests();\r\n    })\r\n  }\r\n  /**\r\n   * @function handleSearchOnEnter\r\n   * @description Trigger search when enter is pressed\r\n   */\r\n  function handleSearchOnEnter() {\r\n    $('#search-inpt').keypress(function (e) {\r\n      if (e.which == 13) {\r\n        e.preventDefault();\r\n        searchTests();\r\n        scrollToSearch();\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * @function handleSearchClick\r\n   * @description Trigger search when #search-btn is clicked\r\n   */\r\n  function handleSearchClick() {\r\n    $('#search-btn').on('click', function (e) {\r\n      searchTests()\r\n    })\r\n  }\r\n  /**\r\n   * @function handleShowMoreClick\r\n   * @description Show more tests when #show-more-btn is clicked\r\n   */\r\n  function handleShowMoreClick() {\r\n    $('#show-more-btn').on('click', function (e) {\r\n      showMoreTests()\r\n    })\r\n  }\r\n  /**\r\n   * @function handleAccordionClick\r\n   * @description Show more tests when #show-more-btn is clicked\r\n   */\r\n  function handleAccordionClick() {\r\n    $('.card-header').on('click', function (e) {\r\n      var badge = $(this).find('.badge');\r\n      badge.addClass('color-brown');\r\n    })\r\n  }\r\n  /**\r\n   * @function scrollToSearch\r\n   * @description Scroll to search area\r\n   */\r\n  function scrollToSearch() {\r\n    $(\"html, body\").stop().animate({\r\n      scrollTop: $('#search-inpt').offset().top\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * @function init\r\n   * @description Initialize app by fetching data\r\n   */\r\n  function init() {\r\n    fetchData('../data/pathology_tests.json');\r\n  }\r\n  init();\r\n\r\n\r\n  return {\r\n    fetchData: fetchData,\r\n    getPathTests: getPathTests,\r\n    filterTests: filterTests,\r\n    sortTests: sortTests,\r\n    filterDepartment: filterDepartment,\r\n    resetTests: resetTests,\r\n    appendTestsHTML: appendTestsHTML,\r\n    determineBorderColor: determineBorderColor\r\n  }\r\n\r\n})();","  /**\r\n   * Polyfill for Javascript includes() function. \r\n   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n   */\r\n\r\nif (!String.prototype.includes) {\r\n  String.prototype.includes = function(search, start) {\r\n    'use strict';\r\n\r\n    if (search instanceof RegExp) {\r\n      throw TypeError('first argument must not be a RegExp');\r\n    } \r\n    if (start === undefined) { start = 0; }\r\n    return this.indexOf(search, start) !== -1;\r\n  };\r\n}"]}